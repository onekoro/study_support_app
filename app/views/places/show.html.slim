- provide(:title, @place.title)
.container.place_show
  .row
    .place_image.col-12
      - if @place.image?
        = image_tag @place.image.to_s, class: "mb-1"
      - else
        = image_tag "default_place.jpg", class: "mb-1 img-fluid"
  .row
    .col-lg-7.mb-3
      .place_title.align-items-center
        .d-flex
          h1.mr-4 = @place.title
        .place_info1.d-flex.mb-2
          .user_info.mr-2
            = link_to user_path(@place.user), class: "user_link" do
              = image_tag @place.user.image.url, height: "30px", class: "border border-dark rounded-circle"
              = @place.user.name
          .created_at = @place.created_at.strftime("%Y/%m/%d").to_s
        .place_recommend.d-flex.mb-2
          - @place.recommend.times do
            i.fas.fa-star.star-icon
          - (5-@place.recommend).times do
            i.far.fa-star.star-icon
        - if @place.tags
          .place_tags.row
            = render partial: 'places/tag', locals: { tags: @place.tags }
        .place_info2.d-flex
          .place_like
            = render partial: 'likes/like_form', locals: { place: @place }
          - if logged_in? && current_user.admin? || current_user?(@place.user)
            .place_edit_form.d-flex
              .place_edit.mr-2
                p.my-0 = link_to "編集", edit_place_path(@place), class: "btn btn-primary btn-sm"
              .place_delete
                p.my-0 = link_to "削除", @place, method: :delete, data: { confirm: "本当に削除しますか？" }, class: "btn btn-danger btn-sm"
      .poster_comment
        .title
          i.far.fa-comment.icon
          h4 投稿者コメント
        - if @place.content.nil?
          .content コメントはありません
        - else
          .content #{@place.content}
    .col-lg-5
      - if @place.latitude && @place.longitude
        .map
          .place_address
            i.fas.fa-map-marker-alt.map-icon
            .address #{@place.address}
          #map
          javascript:
            let map
      
            function initMap(){
              geocoder = new google.maps.Geocoder()
      
              var test = { lat: #{@place.latitude}, lng:#{@place.longitude} };
              map = new google.maps.Map(document.getElementById('map'), {
                center: test,
                zoom: 17,
              });
            
              marker = new google.maps.Marker({
                position: test,
                map: map
              });
            }
          script{ src="https://maps.googleapis.com/maps/api/js?key=#{ENV['GOOGLE_MAP_API_KEY'] }&callback=initMap" async defer}
      .place_wifi_cost
        .wifi
          - if @place.wifi == "あり"
            i.fas.fa-wifi.wifi-icon.icon
            .word Wifiあり
          - else
            = image_tag "wifi_slash_icon.png", class: "img-fluid"
            .word Wifiなし
        .cost
          i.fas.fa-yen-sign.yen-icon.icon
          .word #{@place.cost}円
        - if @place.web
          .url
            i.fas.fa-link.link_icon.icon
            = link_to "#{@place.web}", "#{@place.web}"
  .row.comments
    .col-lg-12
      .title
        i.far.fa-comments.icon
        h4 レビュー一覧
    .col-lg-6
      - if @comments
        = render @comments
      - else
        p レビューはありません
  .row.comment_form
    - if logged_in?
      .col-lg-12
        h5 レビュー・評価する
      .col-lg-6
        = render "comment_form"