- provide(:title, @place.title)
.container.place_show
  .row
    .place_image.col-12
      - if @place.image?
        = image_tag @place.image.to_s, class: "mb-1"
      - else
        = image_tag "default_place.jpg", class: "mb-1 img-fluid"
    
  .row
    .place_title.align-items-center.col-lg-8
      h1.mr-4 = @place.title
      .place_address
        i.fas.fa-map-marker-alt.map-icon
        span #{@place.address}
      .place_info.d-flex
        .user_info.mr-2
          = link_to user_path(@place.user), class: "user_link" do
            = image_tag @place.user.image.url, height: "30px", class: "border border-dark rounded-circle"
            = @place.user.name
        .created_at = @place.created_at.strftime("%Y/%m/%d").to_s
      .place_recommend.d-flex
        - @place.recommend.times do
          i.fas.fa-star.star-icon
        - (5-@place.recommend).times do
          i.far.fa-star.star-icon
      .place_tags.row
        - if @place.tags
          = render partial: 'places/tag', locals: { tags: @place.tags }
      .place_edit_form.d-flex
        - if logged_in? && current_user.admin? || current_user?(@place.user)
          .place_edit.d-flex.align-items-center
            p.my-0 = link_to "編集", edit_place_path(@place)
          p.d-flex.align-items-center.my-0 |
          .place_delete.d-flex.align-items-center
            p.my-0 = link_to "削除", @place, method: :delete, data: { confirm: "本当に削除しますか？" }
    - if @place.latitude && @place.longitude
      .map.col-lg-4
        #map
        javascript:
          let map
    
          function initMap(){
            geocoder = new google.maps.Geocoder()
    
            var test = { lat: #{@place.latitude}, lng:#{@place.longitude} };
            map = new google.maps.Map(document.getElementById('map'), {
              center: test,
              zoom: 17,
            });
          
            marker = new google.maps.Marker({
              position: test,
              map: map
            });
          }
        script{ src="https://maps.googleapis.com/maps/api/js?key=#{ENV['GOOGLE_MAP_API_KEY'] }&callback=initMap" async defer}
      
  .row.poster_comment
    .col-lg-7
      h4 投稿者コメント
    .col-lg-6
      - if @place.content == "" 
        .content コメントはありません
      - else
        .content #{@place.content}
  .row.comments
    .col-lg-7
      h4 レビュー
    .col-lg-6
      - if @comments
        = render @comments
      - else
        .content コメントはありません
  .row.comment_form
    .col-12
      h5 レビュー・評価する
    = render "comment_form"