- provide(:title, "学習場所一覧")
.home_back.py-3.mb-3
  .container.home
    .row
      .col-lg-6.pb-3.my-auto
        .row.align-items-center.justify-content-center.text-center
          .text_contents
            h1.font-weight-bold 勉強は場所選びから
            p.text-white-75.font-weight-light.mb-5 お気に入りの勉強場所を探すアプリ
        .row.align-items-center.justify-content-center.text-center
          .login_contents.d-flex
            - if !logged_in?
              = link_to "ログイン", login_path, class: "btn btn-primary btn-xl m-1"
              = link_to "新規登録", new_user_path, class: "btn btn-primary btn-xl m-1"
              = link_to "ゲストログイン", guest_login_path, method: :post, class: "btn btn-success btn-xl m-1"
            - else
              = link_to "学習場所を投稿", new_place_path, class: "btn btn-primary btn-xl m-1"
              = link_to "学習を記録する", new_record_path, class: "btn btn-success btn-xl m-1"
      .col-lg-6.my-auto
        .row
          = render "search_box"
.container.mb-3.middle-contents
  .row.mx-auto
    .goods.col-lg-8.px-4.py-2.mb-3.mr-lg-5.bg-white.shadow-sm
      h4.subhead.border-bottom.border-secondary いいねの多い投稿
      .row.good-posts
        - @good_places.each.with_index(1) do |place, i|
          .col-sm-4
            .place_rank
              - case i
              - when 1 then
                h5.first.d-flex.justify-content-center.align-items-center.text-warning
                  i.fas.fa-crown.mr-1
                  div 第#{i}位
              - when 2 then
                h5.second.d-flex.justify-content-center.align-items-center.text-secondary
                  i.fas.fa-crown.mr-1
                  div 第#{i}位
              - when 3 then
                h5.third.d-flex.justify-content-center.align-items-center
                  i.fas.fa-crown.mr-1
                  div 第#{i}位
            .place_content.my-2
              = link_to place_path(place), class: "place_link" do
              .place_image_thumb.d-flex.align-items-center.justify-content-center
                - if place.image?
                  = image_tag place.image.to_s, class: "mb-1 img-fluid"
                - else
                  = image_pack_tag "default_place.jpg", class: "mb-1 img-fluid"
              .title.mr-2
                h4.mb-0.py-1 #{place.title}
              .place_info
                .user_info
                  .created_at = place.created_at.strftime("%Y/%m/%d").to_s
                  .place_like.inlink
                    - if logged_in?
                      = render partial: 'likes/like_form', locals: { place: place }
    .tags.col-lg-3.px-4.py-2.mb-3.bg-white.shadow-sm
      .subhead
        h4.border-bottom.border-secondary 人気のタグ
      .row.good-posts
        = render "tag", tags: @tags
.container.px-4.py-2.mb-3.shadow-sm.bg-white.index
  .subhead.places_title
    h2 投稿一覧
  .row.places
    = render @places
  .row.paginate
    = render "paginate", places: @places
